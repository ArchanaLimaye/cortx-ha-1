#!/bin/bash

HA_PATH="<HA_PATH>"

init() {
    echo "Setup Decision maker"
    lnode=$(grep left-node $ARGS | awk '{print $2}')
    rnode=$(grep right-node $ARGS | awk '{print $2}')
    host1=$(salt "*" pillar.get cluster:eosnode-1 --output=json | jq '.["eosnode-1"].hostname' | tr -d 'null')
    host2=$(salt "*" pillar.get cluster:eosnode-2 --output=json | jq '.["eosnode-2"].hostname' | tr -d 'null')
    uuid1=$(salt "*" grains.get node_id --output=json | jq '.["eosnode-1"]' | tr -d 'null')
    uuid2=$(salt "*" grains.get node_id --output=json | jq '.["eosnode-2"]' | tr -d 'null')

    decision_monitor_conf=${HA_DIR}/conf/decision_monitor_conf.json
    
    echo "Reading cluster.sls"
    node1_data_nw=$(salt-call --local pillar.get cluster:eosnode-1 --output=json | jq '.["local"].network["data_nw"].iface')
    node1_mgmt_nw=$(salt-call --local pillar.get cluster:eosnode-1 --output=json | jq '.["local"].network["mgmt_nw"].iface')
    node2_data_nw=$(salt-call --local pillar.get cluster:eosnode-2 --output=json | jq '.["local"].network["data_nw"].iface')
    node2_mgmt_nw=$(salt-call --local pillar.get cluster:eosnode-2 --output=json | jq '.["local"].network["data_nw"].iface')
    
    cp -rf $decision_monitor_conf /tmp/decision_monitor_conf1.json
    cp -rf $decision_monitor_conf /tmp/decision_monitor_conf2.json
    sed -i -e "s|<HOST1>|${host1}|g" \
        -e "s|<HOST2>|${host2}|g" \
        -e "s|<UUID1>|${uuid1}|g" \
        -e "s|<UUID2>|${uuid2}|g" \
        -e "s|<LOCAL>|${host1}|g" /tmp/decision_monitor_conf1.json
    sed -i -e "s|<HOST1>|${host1}|g" \
        -e "s|<HOST2>|${host2}|g" \
        -e "s|<UUID1>|${uuid1}|g" \
        -e "s|<UUID2>|${uuid2}|g" \
        -e "s|<LOCAL>|${host2}|g" /tmp/decision_monitor_conf2.json

    sed -i -e "s|\"<N1_DATA_IFACE>\"|${node1_data_nw//$'\n'/}|g" \
        -e "s|\"<N1_MGMT_IFACE>\"|${node1_mgmt_nw//$'\n'/}|g" \
        -e "s|\"<N2_DATA_IFACE>\"|${node2_data_nw//$'\n'/}|g" \
        -e "s|\"<N2_MGMT_IFACE>\"|${node2_mgmt_nw//$'\n'/}|g" /tmp/decision_monitor_conf1.json

    sed -i -e "s|\"<N1_DATA_IFACE>\"|${node1_data_nw//$'\n'/}|g" \
        -e "s|\"<N1_MGMT_IFACE>\"|${node1_mgmt_nw//$'\n'/}|g" \
        -e "s|\"<N2_DATA_IFACE>\"|${node2_data_nw//$'\n'/}|g" \
        -e "s|\"<N2_MGMT_IFACE>\"|${node2_mgmt_nw//$'\n'/}|g" /tmp/decision_monitor_conf2.json

    cp -rf /tmp/decision_monitor_conf1.json /var/seagate/cortx/ha/decision_monitor_conf.json
    scp -r /tmp/decision_monitor_conf2.json $rnode:/var/seagate/cortx/ha/decision_monitor_conf.json
    rm -rf /tmp/decision_monitor_conf1.json /tmp/decision_monitor_conf2.json

    pcs cluster cib hw_cfg
    pcs -f hw_cfg resource create io_path_health_c1 ocf:seagate:hw_comp_ra path='io' filename='io_path_health_c1'
    pcs -f hw_cfg resource create io_path_health_c2 ocf:seagate:hw_comp_ra path='io' filename='io_path_health_c2'
    pcs -f hw_cfg resource create mgmt_path_health_c1 ocf:seagate:hw_comp_ra path='mgmt' filename='mgmt_path_health_c1'

    pcs -f hw_cfg resource group add c1 io_path_health_c1
    pcs -f hw_cfg resource group add c2 io_path_health_c2
    pcs -f hw_cfg resource group add csm-kibana mgmt_path_health_c1
    pcs cluster cib-push hw_cfg
    rm -rf hw_cfg
}

cleanup() {
    echo "Delete resources"
    resources=(
        io_path_health_c1
        io_path_health_c2
        mgmt_path_health_c1
    )
    for r in ${resources[@]}; do
        pcs resource delete $r || true
    done
}

ACTION=$1
ARGS=$2

$ACTION $ARGS

